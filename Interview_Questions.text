Q(1) What is Nodejs?
Ans: Node.js is a runtime environment that allows you to run JavaScript code on the server-side. Traditionally, JavaScript was used only in browsers for client-side scripting, but Node.js enables developers to use JavaScript for building server-side applications as well.

Q(2) what is package?
Ans: package is a collection of files or modules grouped together to provide specific functionality in a project. It helps organize code, share reusable components, and manage dependencies. Example: axios,Mongoose,Express,cat-me

Q(3) What is NPM?
Ans: NPM stands for *Node Package Manager*, and it is a tool that comes with Node.js. It is used to manage JavaScript packages (libraries or modules) and helps developers share and reuse code. NPM is a key part of the Node.js ecosystem.

Q(4) What is package.json?
Ans: package.json is a configuration file in a Node.js project that contains metadata about the project, such as its name, version, dependencies, and scripts. It is necessary for managing the projectâ€™s settings, dependencies, and information.

Q(5) What is Express?
Ans: Express is a fast, lightweight, and flexible web application framework for **Node.js**. It simplifies building web servers and APIs by providing tools to handle routes, middleware, HTTP requests, and responses efficiently. It's widely used for creating RESTful APIs and web applications.

Q(6) What is ejs?
Ans: EJS (Embedded JavaScript) is a templating engine for Node.js that helps generate dynamic HTML by embedding JavaScript into templates.

Q(7) What is Middleware?
Ans: Middleware in Node.js (with Express) are functions that process requests and responses during the request-response cycle. They can handle tasks like logging, authentication, request parsing, or error handling, and use `next()` to pass control to the next middleware or route. there is mainly 3 type of Built-in Middleware, Custom Middleware Third-Party Middleware
    Custom Middleware: Middleware created for specific use cases, tailored to the needs of the application.
    Built-in Middleware: Provided directly by Node.js
    Third-Party Middleware: Middleware provided by third-party libraries for added functionality. 

Q(8) What is MongoDB?
Ans: MongoDB is a NoSQL database for storing data in JSON format.































